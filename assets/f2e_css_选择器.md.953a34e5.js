import{_ as t,o as e,c as d,X as o}from"./chunks/framework.28451963.js";const m=JSON.parse('{"title":"选择器","description":"","frontmatter":{},"headers":[],"relativePath":"f2e/css/选择器.md","filePath":"f2e/css/选择器.md","lastUpdated":1704191114000}'),c={name:"f2e/css/选择器.md"},a=o('<h1 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-label="Permalink to &quot;选择器&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><p>这里只罗列常用的选择器</p></div><h2 id="序号选择器" tabindex="-1">序号选择器 <a class="header-anchor" href="#序号选择器" aria-label="Permalink to &quot;序号选择器&quot;">​</a></h2><table><thead><tr><th>属性名</th><th>描述</th></tr></thead><tbody><tr><td>:first-child</td><td>匹配其父元素中的第一个子元素<br>示例：<code>p:first-child{}</code>匹配<code>&lt;p&gt;</code>的父元素的第一个<code>&lt;p&gt;</code>元素</td></tr><tr><td>:last-child</td><td>匹配父元素中最后一个子元素<br>示例：<code>p:last-child{}</code>匹配<code>&lt;p&gt;</code>的父元素下最后一个<code>&lt;p&gt;</code>元素</td></tr><tr><td>:nth-child(n)</td><td>匹配父元素中的第n个子元素<br>示例：p:nth-child(2)匹配<code>&lt;p&gt;</code>的父元素中第<code>2</code>个子元素<code>&lt;p&gt;</code>标签</td></tr></tbody></table><h2 id="关系选择器" tabindex="-1">关系选择器 <a class="header-anchor" href="#关系选择器" aria-label="Permalink to &quot;关系选择器&quot;">​</a></h2><table><thead><tr><th>属性名</th><th>描述</th></tr></thead><tbody><tr><td>element&gt;element</td><td>子代选择器，使用 &gt; 符号分隔两个元素<br>示例： <code>div &gt; p{}</code>选择<code>&lt;div&gt;</code>下的所有子级<code>&lt;p&gt;</code>元素</td></tr><tr><td>element+element</td><td>相邻兄弟选择器，使用 + 分隔两个元素<br>示例：<code>div + p{}</code>选择所有紧接着<code>&lt;div&gt;</code>元素之后的第一个<code>&lt;p&gt;</code>元素</td></tr><tr><td>element1~element2</td><td>兄弟选择器，使用 ~ 分隔两个元素<br>示例：<code>p~ul{}</code>选择同一父元素下的<code>p</code>元素之后的每一个<code>ul</code>元素</td></tr></tbody></table>',6),r=[a];function l(s,h,i,n,p,_){return e(),d("div",null,r)}const f=t(c,[["render",l]]);export{m as __pageData,f as default};
