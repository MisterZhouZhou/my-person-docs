import{_ as s,o as a,c as n,X as l}from"./chunks/framework.28451963.js";const i=JSON.parse('{"title":"Wrap","description":"","frontmatter":{},"headers":[],"relativePath":"backend/rust/web框架warp.md","filePath":"backend/rust/web框架warp.md","lastUpdated":1704191114000}'),p={name:"backend/rust/web框架warp.md"},o=l(`<h1 id="wrap" tabindex="-1">Wrap <a class="header-anchor" href="#wrap" aria-label="Permalink to &quot;Wrap&quot;">​</a></h1><h2 id="_1、简介" tabindex="-1">1、简介 <a class="header-anchor" href="#_1、简介" aria-label="Permalink to &quot;1、简介&quot;">​</a></h2><p><code>Warp</code>是一个基于<code>Rust</code>语言开发的<code>Web框架</code>，用于构建<code>高性能的Web应用程序</code>。</p><p>Warp具有以下特点：</p><ul><li>基于Rust语言，具有高性能和安全性。</li><li>提供了丰富的中间件和功能，例如路由、参数提取、请求处理、响应处理等。</li><li>支持异步编程，可以利用异步IO的优势提高性能。</li><li>易于使用和学习。</li></ul><h2 id="_2、官网" tabindex="-1">2、官网 <a class="header-anchor" href="#_2、官网" aria-label="Permalink to &quot;2、官网&quot;">​</a></h2><p>文档：<a href="https://docs.rs/warp/latest/warp" target="_blank" rel="noreferrer">https://docs.rs/warp/latest/warp</a></p><p>示例：<a href="https://github.com/seanmonstar/warp/tree/master/examples" target="_blank" rel="noreferrer">https://github.com/seanmonstar/warp/tree/master/examples</a></p><h2 id="_3、安装依赖" tabindex="-1">3、安装依赖 <a class="header-anchor" href="#_3、安装依赖" aria-label="Permalink to &quot;3、安装依赖&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">tokio </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.3.6</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">serde </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">derive</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">serde_json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">log </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.4</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">pretty_env_logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.4.0</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="_4、入门" tabindex="-1">4、入门 <a class="header-anchor" href="#_4、入门" aria-label="Permalink to &quot;4、入门&quot;">​</a></h2><h3 id="_4-1、路由" tabindex="-1">4.1、路由 <a class="header-anchor" href="#_4-1、路由" aria-label="Permalink to &quot;4.1、路由&quot;">​</a></h3><h4 id="_4-1-1、hello" tabindex="-1">4.1.1、hello <a class="header-anchor" href="#_4-1-1、hello" aria-label="Permalink to &quot;4.1.1、hello&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这种路由不支持异步， 所有请求方式都可以触发</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Filter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hello</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">String</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, {}!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">serve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">hello</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#F07178;">(([</span><span style="color:#F78C6C;">127</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3030</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_4-1-2、参数提取" tabindex="-1">4.1.2、参数提取 <a class="header-anchor" href="#_4-1-2、参数提取" aria-label="Permalink to &quot;4.1.2、参数提取&quot;">​</a></h4><p>接收限定类型</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Filter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hi</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">path</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">param</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">header</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(&quot;user-agent&quot;))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .map(|name: String, agent| format!(&quot;Hi, </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">! </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">&quot;, name, agent));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  warp::serve(hi).run(([127, 0, 0, 1], 3030)).await;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>入参限定参数类型</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Filter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hi</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">path</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">param</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  .and(warp::header(&quot;user-agent&quot;))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .map(|name, agent: String| format!(&quot;Hi, </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">! </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">&quot;, name, agent));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  warp::serve(hi).run(([127, 0, 0, 1], 3030)).await;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_4-1-3、日志打印" tabindex="-1">4.1.3、日志打印 <a class="header-anchor" href="#_4-1-3、日志打印" aria-label="Permalink to &quot;4.1.3、日志打印&quot;">​</a></h4><p>全局日志</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">env</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">set_var</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">RUST_LOG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">debug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pretty_env_logger</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">init_custom_env</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">RUST_LOG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>自定义日志</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> hi_log </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> hi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">path</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::path::param::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">.and(warp::header::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(&quot;user-agent&quot;))</span></span>
<span class="line"><span style="color:#A6ACCD;">.map(|name, agent| format!(&quot;Hi, </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">! </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">&quot;, name, agent))</span></span>
<span class="line"><span style="color:#A6ACCD;">.with(hi_log);</span></span></code></pre></div><h4 id="_4-1-4、请求方式" tabindex="-1">4.1.4、请求方式 <a class="header-anchor" href="#_4-1-4、请求方式" aria-label="Permalink to &quot;4.1.4、请求方式&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// get post put delete</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> base </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">path</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">base</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> base_get </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> base</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, get!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> base_post </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> base</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, post!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> base_put </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> base</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">put</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, put!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> base_delete </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> base</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#89DDFF;">delete</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, delete!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> apis </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> base_get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#A6ACCD;">(base_post)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#A6ACCD;">(base_put)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#A6ACCD;">(base_delete)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="_4-1-5、多路由" tabindex="-1">4.1.5、多路由 <a class="header-anchor" href="#_4-1-5、多路由" aria-label="Permalink to &quot;4.1.5、多路由&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Filter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">env</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">set_var</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">RUST_LOG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">debug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pretty_env_logger</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">init_custom_env</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">RUST_LOG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hi_log</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hello</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">String</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, {}!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hi</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">path</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">param</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  .and(warp::header::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(&quot;user-agent&quot;))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .map(|name, agent| format!(&quot;Hi, </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">! </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">&quot;, name, agent))</span></span>
<span class="line"><span style="color:#A6ACCD;">  .with(hi_log);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  // get /</span></span>
<span class="line"><span style="color:#A6ACCD;">  let get = warp::path::end().map(|| &quot;Hello, World!&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">  // get /he(优先级高)</span></span>
<span class="line"><span style="color:#A6ACCD;">  let get2 = warp::path(&quot;he&quot;).map(|| &quot;Hello, he!&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">  // get /he/:name</span></span>
<span class="line"><span style="color:#A6ACCD;">  let get3 = warp::path!(&quot;he&quot; / String).map(|name| format!(&quot;Hello, </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">!&quot;, name));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  let apis = hello.or(hi).or(get).or(get3).or(get2);</span></span>
<span class="line"><span style="color:#A6ACCD;">  warp::serve(apis).run(([127, 0, 0, 1], 3030)).await;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_4-1-6、同步、异步" tabindex="-1">4.1.6、同步、异步 <a class="header-anchor" href="#_4-1-6、同步、异步" aria-label="Permalink to &quot;4.1.6、同步、异步&quot;">​</a></h4><p>map同步请求</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> get </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::path::</span><span style="color:#82AAFF;">end</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>and_then异步请求</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sleep </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">path</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sleep</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::path::param::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">u64</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">.and_then(sleep);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn sleep(seconds: u64) -&gt; Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">impl</span><span style="color:#89DDFF;"> warp::Reply, </span><span style="color:#C792EA;">Infallible</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  tokio::time::</span><span style="color:#82AAFF;">sleep</span><span style="color:#A6ACCD;">(Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(seconds))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">I waited {} seconds!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seconds))</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_4-1-7、方法路由" tabindex="-1">4.1.7、方法路由 <a class="header-anchor" href="#_4-1-7、方法路由" aria-label="Permalink to &quot;4.1.7、方法路由&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">rest_get</span><span style="color:#A6ACCD;">(id: u32) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  let some_thing </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">json</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warp{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> id)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  let some_thing_warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">some_thing);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">some_thing_warp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">rest_list</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  let res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">json</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">([</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warp1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warp2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]);</span></span>
<span class="line"><span style="color:#A6ACCD;">  let some_thing_warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">res);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">some_thing_warp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">rest_create</span><span style="color:#A6ACCD;">(val: Value) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  let some_thing_warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">val);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">some_thing_warp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">rest_api</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> impl Filter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Extract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (impl warp::Reply</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Clone </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">get</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">path</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">param</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">rest_get</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">list</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">rest_list</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">create</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">post</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">rest_create</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">list</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">create</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> routes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> index</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">rest_api</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">serve</span><span style="color:#A6ACCD;">(routes)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(([</span><span style="color:#F78C6C;">127</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3030</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_4-2、数据处理" tabindex="-1">4.2、数据处理 <a class="header-anchor" href="#_4-2、数据处理" aria-label="Permalink to &quot;4.2、数据处理&quot;">​</a></h3><h4 id="_4-2-1、json" tabindex="-1">4.2.1、json <a class="header-anchor" href="#_4-2-1、json" aria-label="Permalink to &quot;4.2.1、json&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">path</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::path::</span><span style="color:#82AAFF;">end</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">Employee</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to_string</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">rate</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="_4-2-2、body" tabindex="-1">4.2.2、body <a class="header-anchor" href="#_4-2-2、body" aria-label="Permalink to &quot;4.2.2、body&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">serde_derive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Deserialize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serialize</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Filter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Deserialize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serialize)]</span></span>
<span class="line"><span style="color:#A6ACCD;">struct Employee </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">rate</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">u32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// post body</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> promote </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">path</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">employees</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::path::param::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">u32</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">.and(warp::body::content_length_limit(1024 * 1024))</span></span>
<span class="line"><span style="color:#A6ACCD;">.and(warp::body::json())</span></span>
<span class="line"><span style="color:#A6ACCD;">.map(|rate: u32, mut employee: Employee| </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  employee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rate;</span></span>
<span class="line"><span style="color:#A6ACCD;">  warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">employee)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><h4 id="_4-2-3、params、query" tabindex="-1">4.2.3、params、query <a class="header-anchor" href="#_4-2-3、params、query" aria-label="Permalink to &quot;4.2.3、params、query&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">get_items</span><span style="color:#A6ACCD;">(param: String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> query: HashMap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">impl </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Reply</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Infallible</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:time::</span><span style="color:#82AAFF;">sleep</span><span style="color:#A6ACCD;">(Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">get path: {} items: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> param</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> query))</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> items </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">path</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">items</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::path::param::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  .and(warp::query::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">HashMap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">, </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  .and(warp::path::end())</span></span>
<span class="line"><span style="color:#A6ACCD;">  .and_then(get_items);</span></span></code></pre></div><h4 id="_4-2-4、文件服务" tabindex="-1">4.2.4、文件服务 <a class="header-anchor" href="#_4-2-4、文件服务" aria-label="Permalink to &quot;4.2.4、文件服务&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> web_dir </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::fs::</span><span style="color:#82AAFF;">dir</span><span style="color:#A6ACCD;">(WEB_DIR)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> apis </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> web_dir</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">serve</span><span style="color:#A6ACCD;">(apis)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(([</span><span style="color:#F78C6C;">127</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3030</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> index </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::path::</span><span style="color:#82AAFF;">end</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::fs::</span><span style="color:#82AAFF;">file</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}/index.html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> WEB_DIR)))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> apis </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> index</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">serve</span><span style="color:#A6ACCD;">(apis)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(([</span><span style="color:#F78C6C;">127</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3030</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> readme </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::path::</span><span style="color:#82AAFF;">end</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::fs::</span><span style="color:#82AAFF;">file</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./README.md</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> examples </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::</span><span style="color:#82AAFF;">path</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::fs::</span><span style="color:#82AAFF;">dir</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./examples</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="_4-2、中间件" tabindex="-1">4.2、中间件 <a class="header-anchor" href="#_4-2、中间件" aria-label="Permalink to &quot;4.2、中间件&quot;">​</a></h3><h4 id="_4-2-1、登录授权" tabindex="-1">4.2.1、登录授权 <a class="header-anchor" href="#_4-2-1、登录授权" aria-label="Permalink to &quot;4.2.1、登录授权&quot;">​</a></h4><p>header_handler.rs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Filter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> XAUTH</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">str</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x-auth</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">pub struct ContextUser </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">u32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">pub fn </span><span style="color:#82AAFF;">auth</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> impl Filter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Extract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (ContextUser</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Clone </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">any</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">header</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(XAUTH))</span></span>
<span class="line"><span style="color:#A6ACCD;">    .and_then(|auth: String| async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      if </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">auth</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">starts_with</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        panic!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">invalid auth</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">      }</span></span>
<span class="line"><span style="color:#F07178;">      if let Some(id) = auth.split(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">).skip(1).next().and_then(|v| v.parse</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">u32</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">().ok()) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Ok::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">ContextUser</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> warp::Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(ContextUser </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> id </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> else </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">invalid auth, need number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>main.rs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mod header_handler</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">header_handler</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">auth</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ContextUser</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">rest_create</span><span style="color:#A6ACCD;">(val: Value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> user: ContextUser) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let some_thing_warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">val);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">some_thing_warp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> create </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rest_base</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::</span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(warp::body::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">auth</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#A6ACCD;">(rest_create)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="_4-2-2、登录授权完整示例" tabindex="-1">4.2.2、登录授权完整示例 <a class="header-anchor" href="#_4-2-2、登录授权完整示例" aria-label="Permalink to &quot;4.2.2、登录授权完整示例&quot;">​</a></h4><p>header_handler.rs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Filter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> XAUTH</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">str</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x-auth</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">pub struct ContextUser </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">u32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Debug)]</span></span>
<span class="line"><span style="color:#A6ACCD;">pub struct AuthError</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">impl </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">reject</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Reject for AuthError </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Debug)]</span></span>
<span class="line"><span style="color:#A6ACCD;">pub struct AuthErrorNeedsId</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">impl </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">reject</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Reject for AuthErrorNeedsId </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">pub fn </span><span style="color:#82AAFF;">auth</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> impl Filter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Extract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (ContextUser</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Clone </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">any</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">header</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(XAUTH))</span></span>
<span class="line"><span style="color:#A6ACCD;">    .and_then(|auth: String| async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      if </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">auth</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">starts_with</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        return </span><span style="color:#F07178;">Err</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">warp</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">reject</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">custom</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">AuthError</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      if let </span><span style="color:#82AAFF;">Some</span><span style="color:#A6ACCD;">(id) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> auth</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">skip</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">next</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> v</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">parse::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">u32</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">().ok()) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Ok::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">ContextUser</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> warp::Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(ContextUser </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> id </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> else </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        return </span><span style="color:#82AAFF;">Err</span><span style="color:#A6ACCD;">(warp::reject::</span><span style="color:#82AAFF;">custom</span><span style="color:#A6ACCD;">(AuthErrorNeedsId));</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>main.rs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">serde</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Deserialize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serialize</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">serde_json</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Value</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">collections</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:HashMap</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">convert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Infallible</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Duration</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">reply</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Filter</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">mod header_handler</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">header_handler</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">auth</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ContextUser</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> WEB_DIR</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">str</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">public</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">rest_get</span><span style="color:#A6ACCD;">(id: u32) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let some_thing </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">json</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warp{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> id)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    let some_thing_warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">some_thing);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">some_thing_warp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">rest_list</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">json</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">([</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warp1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warp2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    ]);</span></span>
<span class="line"><span style="color:#A6ACCD;">    let some_thing_warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">res);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">some_thing_warp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">rest_create</span><span style="color:#A6ACCD;">(val: Value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> user: ContextUser) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let some_thing_warp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> warp::reply::</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">val);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">some_thing_warp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">rest_api</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> impl Filter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Extract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (impl warp::Reply</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Clone </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">get</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">path</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">param</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">rest_get</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">list</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">rest_list</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">create</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">post</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">body</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">auth</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">rest_create</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">get</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">list</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">create</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">env</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">set_var</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">RUST_LOG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">debug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">pretty_env_logger</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">init_custom_env</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">RUST_LOG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">fs</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">dir</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">WEB_DIR</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">routes</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">or</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">rest_api</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">serve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">routes</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#F07178;">(([</span><span style="color:#F78C6C;">127</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3030</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_4-2-3、线程池" tabindex="-1">4.2.3、线程池 <a class="header-anchor" href="#_4-2-3、线程池" aria-label="Permalink to &quot;4.2.3、线程池&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> db_pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Arc::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(DbPool</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> routes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">rest_api</span><span style="color:#A6ACCD;">(db_pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">struct DbPool </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">with_pool</span><span style="color:#A6ACCD;">(pool: Arc</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">DbPool</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> impl Filter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Extract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (Arc</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">DbPool</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Infallible</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Clone  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">any</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">move</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">rest_api</span><span style="color:#A6ACCD;">(db_pool: Arc</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">DbPool</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> impl Filter</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Extract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (impl warp::Reply</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Rejection</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Clone </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">path</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">get</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rest_base</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">warp</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">path</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">param</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">with_pool</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">db_pool</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">and_then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">rest_get</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">get</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_4-2-4、" tabindex="-1">4.2.4、 <a class="header-anchor" href="#_4-2-4、" aria-label="Permalink to &quot;4.2.4、&quot;">​</a></h4>`,61),e=[o];function t(r,c,F,D,y,A){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{i as __pageData,u as default};
