import{_ as s,o as n,c as a,X as l}from"./chunks/framework.28451963.js";const i=JSON.parse('{"title":"常用三方库","description":"","frontmatter":{},"headers":[],"relativePath":"backend/rust/常用三方库.md","filePath":"backend/rust/常用三方库.md","lastUpdated":1704191114000}'),p={name:"backend/rust/常用三方库.md"},o=l(`<h1 id="常用三方库" tabindex="-1">常用三方库 <a class="header-anchor" href="#常用三方库" aria-label="Permalink to &quot;常用三方库&quot;">​</a></h1><h2 id="_1、cargo-watch" tabindex="-1">1、cargo-watch <a class="header-anchor" href="#_1、cargo-watch" aria-label="Permalink to &quot;1、cargo-watch&quot;">​</a></h2><h3 id="_1-1、安装" tabindex="-1">1.1、安装 <a class="header-anchor" href="#_1-1、安装" aria-label="Permalink to &quot;1.1、安装&quot;">​</a></h3><p>地址： <a href="https://crates.io/crates/cargo-watch" target="_blank" rel="noreferrer">https://crates.io/crates/cargo-watch</a></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cargo-watch</span></span></code></pre></div><h3 id="_1-2、使用" tabindex="-1">1.2、使用 <a class="header-anchor" href="#_1-2、使用" aria-label="Permalink to &quot;1.2、使用&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-q</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span></code></pre></div><h3 id="_1-3、查看帮助" tabindex="-1">1.3、查看帮助 <a class="header-anchor" href="#_1-3、查看帮助" aria-label="Permalink to &quot;1.3、查看帮助&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">watch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--help</span></span></code></pre></div><h2 id="_2、tokio" tabindex="-1">2、tokio <a class="header-anchor" href="#_2、tokio" aria-label="Permalink to &quot;2、tokio&quot;">​</a></h2><h3 id="_2-1、官网" tabindex="-1">2.1、官网 <a class="header-anchor" href="#_2-1、官网" aria-label="Permalink to &quot;2.1、官网&quot;">​</a></h3><p><a href="https://tokio.rs/tokio/tutorial" target="_blank" rel="noreferrer">https://tokio.rs/tokio/tutorial</a></p><h3 id="_2-2、安装" tabindex="-1">2.2、安装 <a class="header-anchor" href="#_2-2、安装" aria-label="Permalink to &quot;2.2、安装&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">tokio </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-3、使用" tabindex="-1">2.3、使用 <a class="header-anchor" href="#_2-3、使用" aria-label="Permalink to &quot;2.3、使用&quot;">​</a></h3><h4 id="_2-3-1、async" tabindex="-1">2.3.1、async <a class="header-anchor" href="#_2-3-1、async" aria-label="Permalink to &quot;2.3.1、async&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">future</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Future</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Duration</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:time</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">h1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tokio</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">asnyc1 result: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> async1</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;">.await);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">asnyc2 result is {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> async2</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;">.await);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tokio</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">h1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">async1</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> String </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">sleep</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Duration</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">async1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to_string</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 与上面写法一致</span></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">async2</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> impl Future</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Output </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    async </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">sleep</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Duration</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">async2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to_string</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_2-3-2、简单示例" tabindex="-1">2.3.2、简单示例 <a class="header-anchor" href="#_2-3-2、简单示例" aria-label="Permalink to &quot;2.3.2、简单示例&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">op</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">say_world</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">op</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">say_world</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_2-3-3、runtime" tabindex="-1">2.3.3、runtime <a class="header-anchor" href="#_2-3-3、runtime" aria-label="Permalink to &quot;2.3.3、runtime&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>runtime</code>不能在异步线程中执行</p></div><h5 id="_2-3-3-1、创建runtime" tabindex="-1">2.3.3.1、创建runtime <a class="header-anchor" href="#_2-3-3-1、创建runtime" aria-label="Permalink to &quot;2.3.3.1、创建runtime&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:runtime</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">runtime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">runtime</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Runtime</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">runtime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">    });</span></span>
<span class="line"><span style="color:#F07178;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Hello, world!22222</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><h5 id="_2-3-2-1、创建带有线程池的runtime" tabindex="-1">2.3.2.1、创建带有线程池的runtime <a class="header-anchor" href="#_2-3-2-1、创建带有线程池的runtime" aria-label="Permalink to &quot;2.3.2.1、创建带有线程池的runtime&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:runtime</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">runtime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">runtime</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Builder</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">new_multi_thread</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">for</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">number</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">in</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1..100</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">future</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">move</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> number);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">runtime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">future</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">runtime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">move</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">    });</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><h5 id="_2-3-2-2、future-ready" tabindex="-1">2.3.2.2、future::ready <a class="header-anchor" href="#_2-3-2-2、future-ready" aria-label="Permalink to &quot;2.3.2.2、future::ready&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:future</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:runtime</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">runtime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">runtime</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Builder</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">new_multi_thread</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">join_handle</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">runtime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">future</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">ready</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">113</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">runtime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">move</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> join_handle.await.unwrap());</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-2-3、async-main" tabindex="-1">2.3.2.3、async main <a class="header-anchor" href="#_2-3-2-3、async-main" aria-label="Permalink to &quot;2.3.2.3、async main&quot;">​</a></h5><p>对于main函数，tokio提供了简化的异步运行时创建方式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{}</span></span></code></pre></div><p>对于注解还有以下方式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#[tokio::</span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(flavor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">multi_thread</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#676E95;font-style:italic;">// 等价于#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::</span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(flavor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">multi_thread</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> worker_threads </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">))]</span></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::</span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(worker_threads </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">))]</span></span></code></pre></div><p>等价于以下代码</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">runtime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">Builder</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">new_multi_thread</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">worker_threads</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">N</span><span style="color:#F07178;">)  </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enable_all</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">block_on</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#[tokio::</span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(flavor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">current_thread</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等价于</span></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">runtime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">Builder</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">new_current_thread</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enable_all</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">block_on</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_2-3-4、asyncread" tabindex="-1">2.3.4、AsyncRead <a class="header-anchor" href="#_2-3-4、asyncread" aria-label="Permalink to &quot;2.3.4、AsyncRead&quot;">​</a></h4><h5 id="_2-3-4-1、-lines-按行读" tabindex="-1">2.3.4.1、 lines 按行读 <a class="header-anchor" href="#_2-3-4-1、-lines-按行读" aria-label="Permalink to &quot;2.3.4.1、 lines 按行读&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncBufReadExt</span><span style="color:#89DDFF;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs::File::</span><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut buf_reader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:BufReader::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(file)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">lines</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    while let </span><span style="color:#F07178;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">line</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> = buf_reader.</span><span style="color:#F07178;">next_line</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.await? </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">line</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-2、-read-line-按行读" tabindex="-1">2.3.4.2、 read_line 按行读 <a class="header-anchor" href="#_2-3-4-2、-read-line-按行读" aria-label="Permalink to &quot;2.3.4.2、 read_line 按行读&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncBufReadExt</span><span style="color:#89DDFF;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs::File::</span><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut buf_reader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:BufReader::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(file);</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut contents </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> String::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    while let </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> = buf_reader.</span><span style="color:#F07178;">read_line</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">mut</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">contents</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">contents</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">contents</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-3、read-按字节覆盖读取" tabindex="-1">2.3.4.3、read 按字节覆盖读取 <a class="header-anchor" href="#_2-3-4-3、read-按字节覆盖读取" aria-label="Permalink to &quot;2.3.4.3、read 按字节覆盖读取&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:AsyncReadExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">; </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-4、read-buf-按字节追加读取" tabindex="-1">2.3.4.4、read_buf 按字节追加读取 <a class="header-anchor" href="#_2-3-4-4、read-buf-按字节追加读取" aria-label="Permalink to &quot;2.3.4.4、read_buf 按字节追加读取&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">bytes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:BytesMut</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:AsyncReadExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BytesMut</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">with_capacity</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 第一次读取，读取容量大小的数据，即4字节数据，</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 此时BytesMut内部的位移指针在offset = 3处</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_buf</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 第二次读取，因buf已满，这次将一次性读取剩余所有数据(只请求一次读系统调用)，</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// BytesMut也将自动扩容以便存放更多数据，且可能会根据所读数据的多少进行多次扩容，</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 所读数据都将从index=4处开始追加保存, 遇到空行会终止</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_buf</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-5、read-exact" tabindex="-1">2.3.4.5、read_exact <a class="header-anchor" href="#_2-3-4-5、read-exact" aria-label="Permalink to &quot;2.3.4.5、read_exact&quot;">​</a></h5><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>读取超出容量会报错</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:AsyncReadExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">; </span><span style="color:#F78C6C;">1024</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_exact</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">first read {} bytes: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-6、read-to-string" tabindex="-1">2.3.4.6、read_to_string <a class="header-anchor" href="#_2-3-4-6、read-to-string" aria-label="Permalink to &quot;2.3.4.6、read_to_string&quot;">​</a></h5><h5 id="_2-3-4-7、read-to-end" tabindex="-1">2.3.4.7、read_to_end <a class="header-anchor" href="#_2-3-4-7、read-to-end" aria-label="Permalink to &quot;2.3.4.7、read_to_end&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:AsyncReadExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Vec</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">u8</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Vec</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_to_end</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">first read {} bytes: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-8、take" tabindex="-1">2.3.4.8、take <a class="header-anchor" href="#_2-3-4-8、take" aria-label="Permalink to &quot;2.3.4.8、take&quot;">​</a></h5><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>take</code>限制最多读取的字节数</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:AsyncReadExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> t </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">take</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">; </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">; </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">; </span><span style="color:#F78C6C;">1024</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set_limit</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-9、chain" tabindex="-1">2.3.4.9、chain <a class="header-anchor" href="#_2-3-4-9、chain" aria-label="Permalink to &quot;2.3.4.9、chain&quot;">​</a></h5><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>chain</code>可将两个<code>Reader</code>串联起来(可多次串联)</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:AsyncReadExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> t </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">chain</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">f2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">; </span><span style="color:#F78C6C;">20</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">std</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-10、split-指定分隔符" tabindex="-1">2.3.4.10、split(指定分隔符) <a class="header-anchor" href="#_2-3-4-10、split-指定分隔符" aria-label="Permalink to &quot;2.3.4.10、split(指定分隔符)&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">AsyncBufReadExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> lines </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">io</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">BufReader</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">f</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Some</span><span style="color:#F07178;">(line) </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lines</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">next_segment</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">read line: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> String</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">line</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">());</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-4-11、read-until-读到停止" tabindex="-1">2.3.4.11、read_until(读到停止) <a class="header-anchor" href="#_2-3-4-11、read-until-读到停止" aria-label="Permalink to &quot;2.3.4.11、read_until(读到停止)&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">AsyncBufReadExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">File</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">open</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">io</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">BufReader</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">f</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> data</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Vec</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">u8</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Vec</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">f</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_until</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">first line: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_2-3-5、asyncwrite" tabindex="-1">2.3.5、AsyncWrite <a class="header-anchor" href="#_2-3-5、asyncwrite" aria-label="Permalink to &quot;2.3.5、AsyncWrite&quot;">​</a></h4><h5 id="_2-3-5-1、write-all" tabindex="-1">2.3.5.1、write_all <a class="header-anchor" href="#_2-3-5-1、write-all" aria-label="Permalink to &quot;2.3.5.1、write_all&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncWriteExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> File::</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let buffer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    file</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write_all</span><span style="color:#A6ACCD;">(buffer)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h5 id="_2-3-5-2、write" tabindex="-1">2.3.5.2、write <a class="header-anchor" href="#_2-3-5-2、write" aria-label="Permalink to &quot;2.3.5.2、write&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncWriteExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut file </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> File::</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    file</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write</span><span style="color:#A6ACCD;">(b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_2-3-6、tokio-spawn" tabindex="-1">2.3.6、tokio::spawn <a class="header-anchor" href="#_2-3-6、tokio-spawn" aria-label="Permalink to &quot;2.3.6、tokio::spawn&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Duration</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">sleep_until</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Instant</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let handle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">sleep_until</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Instant</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">now</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> + </span><span style="color:#FFCB6B;">Duration</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.await;</span></span>
<span class="line"><span style="color:#A6ACCD;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">    });</span></span>
<span class="line"><span style="color:#F07178;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">----</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">    let _ = handle.await;</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><h4 id="_2-3-7、tcplistener" tabindex="-1">2.3.7、TcpListener <a class="header-anchor" href="#_2-3-7、tcplistener" aria-label="Permalink to &quot;2.3.7、TcpListener&quot;">​</a></h4><h5 id="_2-3-7-1、server-client" tabindex="-1">2.3.7.1、Server Client <a class="header-anchor" href="#_2-3-7-1、server-client" aria-label="Permalink to &quot;2.3.7.1、Server Client&quot;">​</a></h5><p>server</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">TcpListener</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> TcpStream</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">AsyncWriteExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncReadExt</span><span style="color:#89DDFF;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let addr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:4000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let listener </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TcpListener::</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(addr)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Listening on: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">stream</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">_</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> = listener.</span><span style="color:#F07178;">accept</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.await?;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            if let </span><span style="color:#F07178;">Err</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> = </span><span style="color:#F07178;">handle_client</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">stream</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">eprintln</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">handle_client</span><span style="color:#A6ACCD;">(mut stream: TcpStream) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:error::Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">new client connected</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    let mut buf = [0; 1024];</span></span>
<span class="line"><span style="color:#F07178;">    stream.write_all(b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Welcome to the PingPong server!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">).await?;</span></span>
<span class="line"><span style="color:#F07178;">    loop {</span></span>
<span class="line"><span style="color:#F07178;">        let n = stream.read(&amp;mut buf).await?;</span></span>
<span class="line"><span style="color:#F07178;">        if n == 0 {</span></span>
<span class="line"><span style="color:#F07178;">            break;</span></span>
<span class="line"><span style="color:#F07178;">        }</span></span>
<span class="line"><span style="color:#F07178;">        stream.write_all(b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Pong</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">).await?;</span></span>
<span class="line"><span style="color:#F07178;">    }</span></span>
<span class="line"><span style="color:#F07178;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">client disconnected</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    Ok(())</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><p>client</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:TcpStream</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">AsyncWriteExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncReadExt</span><span style="color:#89DDFF;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">connect</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.await?;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">connect</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let addr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:4000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut stream </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TcpStream::</span><span style="color:#82AAFF;">connect</span><span style="color:#A6ACCD;">(addr)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Connected to: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    let mut buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">; </span><span style="color:#F78C6C;">1024</span><span style="color:#A6ACCD;">];</span></span>
<span class="line"><span style="color:#A6ACCD;">    stream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write_all</span><span style="color:#A6ACCD;">(b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Ping</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// loop {</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//     let n = stream.read(&amp;mut buf).await?;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//     if n == 0 {</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//         break;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//     }</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//     let pong = std::str::from_utf8(&amp;buf[..n])?;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//     println!(&quot;11--client: {}&quot;, pong);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    let n </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> stream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut buf)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let pong </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">from_utf8</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">buf[</span><span style="color:#89DDFF;">..</span><span style="color:#A6ACCD;">n])</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">--{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pong);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h5 id="_2-3-7-2、server-mspc-channel" tabindex="-1">2.3.7.2、Server mspc::Channel <a class="header-anchor" href="#_2-3-7-2、server-mspc-channel" aria-label="Permalink to &quot;2.3.7.2、Server mspc::Channel&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">TcpListener</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> TcpStream</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">tcp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">OwnedReadHalf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> OwnedWriteHalf</span><span style="color:#89DDFF;">}},</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">sync</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:mpsc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncBufReadExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncWriteExt</span><span style="color:#89DDFF;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TcpListener::</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:4000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Listening on: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">local_addr</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    while let </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">((stream</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _)) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">accept</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            if let </span><span style="color:#F07178;">Err</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> = </span><span style="color:#F07178;">handle_client</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">stream</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">.await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">eprintln</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">handle_client</span><span style="color:#A6ACCD;">(client: TcpStream) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:error::Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">new client connected</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">    let (client_reader, client_writer) = client.into_split();</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 创建消息通道</span></span>
<span class="line"><span style="color:#F07178;">    let (msg_tx, msg_rx) = mpsc</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:channel::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(100);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    // 从客户端读取异步任务</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut read_task = tokio::spawn(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">read_from_client</span><span style="color:#A6ACCD;">(client_reader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> msg_tx)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    // 向客户端写入异步任务</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut write_task = tokio::spawn(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">write_from_client</span><span style="color:#A6ACCD;">(client_writer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> msg_rx)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    if tokio::try_join!(&amp;mut read_task, &amp;mut write_task).is_err() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">eprintln</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">read_task/write_task terminated</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        read_task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abort</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        write_task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abort</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    Ok(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 从客户端读</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn read_from_client(reader: OwnedReadHalf, msg_tx: mpsc::Sender</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut buf_reader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> io::BufReader::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(reader);</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> String::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        match buf_reader.read_line(&amp;mut buf).await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">Err</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">_</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#82AAFF;">eprintln</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">read from client error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">client closed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drain</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">..</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">as_str</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to_string</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">read {} bytes from client. content: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg_tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is_err</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                  </span><span style="color:#82AAFF;">eprintln</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">receiver closed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                  </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 給客户端写</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn write_from_client(writer: OwnedWriteHalf, mut msg_rx: mpsc::Receiver</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut buf_writer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> io::BufWriter::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(writer);</span></span>
<span class="line"><span style="color:#A6ACCD;">    while let </span><span style="color:#82AAFF;">Some</span><span style="color:#A6ACCD;">(mut msg) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> msg_rx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">writer to client: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> msg);</span></span>
<span class="line"><span style="color:#A6ACCD;">        msg.push(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">        if let Err(e) = buf_writer.write_all(msg.as_bytes()).await {</span></span>
<span class="line"><span style="color:#F07178;">            eprintln!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">write to client failed: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> e);</span></span>
<span class="line"><span style="color:#A6ACCD;">            break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        if let </span><span style="color:#82AAFF;">Err</span><span style="color:#A6ACCD;">(e) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> buf_writer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flush</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            eprintln!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">flush to client failed: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> e);</span></span>
<span class="line"><span style="color:#A6ACCD;">            break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_2-3-8、timer" tabindex="-1">2.3.8、Timer <a class="header-anchor" href="#_2-3-8、timer" aria-label="Permalink to &quot;2.3.8、Timer&quot;">​</a></h4><h5 id="_2-3-8-1、时间点-time-instant" tabindex="-1">2.3.8.1、时间点 time::Instant <a class="header-anchor" href="#_2-3-8-1、时间点-time-instant" aria-label="Permalink to &quot;2.3.8.1、时间点 time::Instant&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> now </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::time::Instant::</span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> next_3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> now </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> tokio::time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h5 id="_2-3-8-2、睡眠-time-sleep" tabindex="-1">2.3.8.2、睡眠 time::Sleep <a class="header-anchor" href="#_2-3-8-2、睡眠-time-sleep" aria-label="Permalink to &quot;2.3.8.2、睡眠 time::Sleep&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 睡眠2秒</span></span>
<span class="line"><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">sleep</span><span style="color:#A6ACCD;">(time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 一直睡眠，睡到2秒后醒来</span></span>
<span class="line"><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">sleep_until</span><span style="color:#A6ACCD;">(time::Instant::</span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>获取当前时间</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time::Instant::</span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">sleep</span><span style="color:#A6ACCD;">(time::Duration::</span><span style="color:#82AAFF;">from_micros</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sleep {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> time::Instant::</span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">duration_since</span><span style="color:#A6ACCD;">(start)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">as_nanos</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>重置休眠时间</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">start: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> slp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time::</span><span style="color:#82AAFF;">sleep</span><span style="color:#A6ACCD;">(time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">pin</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(slp)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">slp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">as_mut</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reset</span><span style="color:#A6ACCD;">(time::Instant::</span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">slp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">end: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h5 id="_2-3-8-3、任务超时-time-timeout" tabindex="-1">2.3.8.3、任务超时 time::Timeout <a class="header-anchor" href="#_2-3-8-3、任务超时-time-timeout" aria-label="Permalink to &quot;2.3.8.3、任务超时 time::Timeout&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time::</span><span style="color:#82AAFF;">timeout</span><span style="color:#A6ACCD;">(time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> async </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">sleeping: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">now</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">sleep</span><span style="color:#A6ACCD;">(time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">33</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">match res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Err</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">_</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">task timeout: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">now</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">get the res &#39;{}&#39;: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">now</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h5 id="_2-3-8-4、间隔任务-time-interval" tabindex="-1">2.3.8.4、间隔任务 time::Interval <a class="header-anchor" href="#_2-3-8-4、间隔任务-time-interval" aria-label="Permalink to &quot;2.3.8.4、间隔任务 time::Interval&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">before: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::time::Instant::</span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> tokio::time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> mut int_v </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::time::</span><span style="color:#82AAFF;">interval_at</span><span style="color:#A6ACCD;">(start</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> tokio::time::Duration::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 任务阻塞，5秒后被唤醒</span></span>
<span class="line"><span style="color:#A6ACCD;">int_v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tick</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">task 1: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 该计时任务&quot;阻塞&quot;，直到1秒后被唤醒</span></span>
<span class="line"><span style="color:#A6ACCD;">int_v</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tick</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">task 2: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">now</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="_2-3-9、task的通信和同步" tabindex="-1">2.3.9、task的通信和同步 <a class="header-anchor" href="#_2-3-9、task的通信和同步" aria-label="Permalink to &quot;2.3.9、task的通信和同步&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>tokio提供几种不同功能的通道：</p><ul><li>oneshot通道: 一对一发送的一次性通道，即该通道只能由一个发送者(Sender)发送最多一个数据，且只有一个接收者(Receiver)接收数据</li><li>mpsc通道: 多对一发送，即该通道可以同时有多个发送者向该通道发数据，但只有一个接收者接收数据</li><li>broadcast通道: 多对多发送，即该通道可以同时有多个发送者向该通道发送数据，也可以有多个接收者接收数据</li><li>watch通道: 一对多发送，即该通道只能有一个发送者向该通道发送数据，但可以有多个接收者接收数据</li></ul></div><h5 id="_2-3-9-1、oneshot" tabindex="-1">2.3.9.1、oneshot <a class="header-anchor" href="#_2-3-9-1、oneshot" aria-label="Permalink to &quot;2.3.9.1、oneshot&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1对1</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> (tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> rx) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sync::oneshot::</span><span style="color:#82AAFF;">channel</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    if tx.send(</span><span style="color:#F78C6C;">33</span><span style="color:#F07178;">).is_err</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">receiver dropped</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">match rx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">received {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Err</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">_</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">receiver dropped</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-9-2、mpsc" tabindex="-1">2.3.9.2、mpsc <a class="header-anchor" href="#_2-3-9-2、mpsc" aria-label="Permalink to &quot;2.3.9.2、mpsc&quot;">​</a></h5><p>一个异步</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> (tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mut rx) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sync::mpsc::channel::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i32</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(10);</span></span>
<span class="line"><span style="color:#A6ACCD;">tokio::spawn(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    for i </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.</span><span style="color:#89DDFF;">.=</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        if tx.send(i).await.is_err() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">receiver closed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">while let Some(i) = rx.recv().await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">received: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> i);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>多个异步</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> (tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mut rx) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sync::mpsc::channel::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">i32</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(10);</span></span>
<span class="line"><span style="color:#A6ACCD;">for i in 1..=10 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let tx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    tokio::</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        if tx.send(i).await.is_err() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">receiver closed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">drop(tx);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">while let Some(i) = rx.recv().await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">received: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> i);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h5 id="_2-3-9-3、broadcast" tabindex="-1">2.3.9.3、broadcast <a class="header-anchor" href="#_2-3-9-3、broadcast" aria-label="Permalink to &quot;2.3.9.3、broadcast&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 最多存放16个消息</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> (tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mut rx) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::sync::broadcast::</span><span style="color:#82AAFF;">channel</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> mut rx2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> handle1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rx receive: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">Err</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">err: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> handle2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rx2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rx2 receive: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">Err</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">err: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">handle1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">handle2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h5 id="_2-3-9-4、watch" tabindex="-1">2.3.9.4、watch <a class="header-anchor" href="#_2-3-9-4、watch" aria-label="Permalink to &quot;2.3.9.4、watch&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建watch通道时，需指定一个初始值存放在通道中</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> (tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mut rx) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tokio::sync::watch::</span><span style="color:#82AAFF;">channel</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> mut rx1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    while rx1.changed().await.is_ok() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">changed1: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">rx1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">borrow</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">spawn</span><span style="color:#A6ACCD;">(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    while rx.changed().await.is_ok() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">changed2: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">rx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">borrow</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="_2-3-10、tokio-select" tabindex="-1">2.3.10、tokio::select！ <a class="header-anchor" href="#_2-3-10、tokio-select" aria-label="Permalink to &quot;2.3.10、tokio::select！&quot;">​</a></h4><p>server.rs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">AsyncBufReadExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncWriteExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> BufReader</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:TcpListener</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">sync</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:broadcast</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> SERVER_ADDR</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">str</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:8888</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let listener </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TcpListener::</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(SERVER_ADDR)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">let</span><span style="color:#A6ACCD;"> (tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _rx) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> broadcast</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">channel</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> socket</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addr</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">listener</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">accept</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{} connected</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addr</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#F07178;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">spawn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">move</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            let </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">r</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">w</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> = socket.split</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">            let mut </span><span style="color:#A6ACCD;">reader</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BufReader</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">            let mut </span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">();</span></span>
<span class="line"><span style="color:#F07178;">            loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">select</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_line</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                          </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">server received {}: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#F07178;">((</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addr</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#F07178;">() </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">msg_str</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">other_addr</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">other_addr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">addr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">server send to {}: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">other_addr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg_str</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                            </span><span style="color:#A6ACCD;">w</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write_all</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">msg_str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">as_bytes</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>client.rs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">AsyncBufReadExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncWriteExt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> BufReader</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:TcpStream</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">sync</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:mpsc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> SERVER_ADDR</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">str</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:8888</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TcpStream::</span><span style="color:#82AAFF;">connect</span><span style="color:#A6ACCD;">(SERVER_ADDR)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Connected to: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> SERVER_ADDR);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">let</span><span style="color:#A6ACCD;"> (tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mut rx) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mpsc</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:channel::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(3);</span></span>
<span class="line"><span style="color:#A6ACCD;">    tokio::spawn(async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">let</span><span style="color:#A6ACCD;"> (r</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mut w) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into_split</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        let mut reader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> BufReader::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(r);</span></span>
<span class="line"><span style="color:#A6ACCD;">        let mut line </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> String::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:select</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_line</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut line) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">read from server: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">line</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#A6ACCD;">line</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#A6ACCD;">() </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">write to server: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                    </span><span style="color:#A6ACCD;">w</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">write_all</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">as_bytes</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(&quot;Enter something to send to server&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    loop </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      let mut buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> String::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">      std::io::</span><span style="color:#82AAFF;">stdin</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read_line</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut buf)</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 不能写成buf.trim().to_string(), 使用tcp发送有问题</span></span>
<span class="line"><span style="color:#A6ACCD;">      tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(buf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      buf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h2 id="_3、hyper" tabindex="-1">3、hyper <a class="header-anchor" href="#_3、hyper" aria-label="Permalink to &quot;3、hyper&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>hyper是一个基于Rust语言的HTTP库, hyper-rustls是一个基于Rust语言的TLS库。</p></div><h3 id="_3-1、官网" tabindex="-1">3.1、官网 <a class="header-anchor" href="#_3-1、官网" aria-label="Permalink to &quot;3.1、官网&quot;">​</a></h3><p><a href="https://hyper.rs/guides/0.14/" target="_blank" rel="noreferrer">https://hyper.rs/guides/0.14/</a></p><h3 id="_3-2、安装" tabindex="-1">3.2、安装 <a class="header-anchor" href="#_3-2、安装" aria-label="Permalink to &quot;3.2、安装&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">hyper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.14</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">hyper</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">rustls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.24.1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">tokio </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_3-3、server" tabindex="-1">3.3、Server <a class="header-anchor" href="#_3-3、server" aria-label="Permalink to &quot;3.3、Server&quot;">​</a></h3><p><a href="https://github.com/hyperium/hyper/blob/0.14.x/examples" target="_blank" rel="noreferrer">https://github.com/hyperium/hyper/blob/0.14.x/examples</a></p><h4 id="_3-3-1、简单示例" tabindex="-1">3.3.1、简单示例 <a class="header-anchor" href="#_3-3-1、简单示例" aria-label="Permalink to &quot;3.3.1、简单示例&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:SocketAddr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">convert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Infallible</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">service</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">make_service_fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> service_fn</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> Server</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Body</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">hello_world</span><span style="color:#A6ACCD;">(_req: Request</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Body</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Response</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Body</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#A6ACCD;"> Infallible</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Response</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Body</span><span style="color:#89DDFF;">&gt;, </span><span style="color:#C792EA;">Infallible</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(Response::new(&quot;Hello, World&quot;.into()))</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn main() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let addr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> SocketAddr::</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(([</span><span style="color:#F78C6C;">127</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5000</span><span style="color:#A6ACCD;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    let make_svc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make_service_fn</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">_conn</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> async </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Infallible&gt;(</span><span style="color:#F07178;">service_fn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">hello_world</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 创建服务</span></span>
<span class="line"><span style="color:#A6ACCD;">    let server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Server::</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">addr)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">serve</span><span style="color:#A6ACCD;">(make_svc);</span></span>
<span class="line"><span style="color:#A6ACCD;">    if let </span><span style="color:#82AAFF;">Err</span><span style="color:#A6ACCD;">(e) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        eprintln!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">service error: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> e);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_3-3-2、https-http请求代理" tabindex="-1">3.3.2、https/http请求代理 <a class="header-anchor" href="#_3-3-2、https-http请求代理" aria-label="Permalink to &quot;3.3.2、https/http请求代理&quot;">​</a></h4><p>Cargo.toml</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">hyper </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.14</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">tokio </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">hyper</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">rustls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.22</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">futures</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">util </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.3</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">anyhow </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.37</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>main.rs</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">*;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">sync</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Arc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:SocketAddr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Body</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Server</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Client</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">service</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">make_service_fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> service_fn</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// hyper-rustls = &quot;0.22&quot; 版本过高不行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let https </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> hyper_rustls::HttpsConnector::</span><span style="color:#82AAFF;">with_native_roots</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Client::</span><span style="color:#82AAFF;">builder</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">build::</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Body</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(https);</span></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Arc::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(client);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    let addr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> SocketAddr::</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(([</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7000</span><span style="color:#A6ACCD;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    let make_svc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make_service_fn</span><span style="color:#A6ACCD;">(move </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">_conn</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Arc::</span><span style="color:#82AAFF;">clone</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">client);</span></span>
<span class="line"><span style="color:#A6ACCD;">        async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">service_fn</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#A6ACCD;">move</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                    let </span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Arc</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">clone</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">client</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">                    async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">proxy: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">uri</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">path</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#82AAFF;">proxy_crate</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">req</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">?</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">                        </span><span style="color:#A6ACCD;">client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">request</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">req</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">context</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">proxy request</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">                    }</span></span>
<span class="line"><span style="color:#F07178;">                }</span></span>
<span class="line"><span style="color:#F07178;">            ))</span></span>
<span class="line"><span style="color:#F07178;">        }</span></span>
<span class="line"><span style="color:#F07178;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_server</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Server</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">bind</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">addr</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">serve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">make_svc</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">context</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Run server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">fn proxy_crate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">mut</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Request</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Body</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#F07178;"> -&gt; Result</span><span style="color:#89DDFF;">&lt;()&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">for</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">in</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content-length</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">accept-encoding</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content-encoding</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">transfer-encoding</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">headers_mut</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">uri</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">uri</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">uri_string</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">uri</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        Some</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">query_item</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">format</span><span style="color:#F07178;">!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://crates.io{}?{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">uri</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">(),</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">query_item</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;font-style:italic;">None</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://crates.io{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">uri</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">path</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">uri_mut</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">uri_string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">context</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parsing URI Error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">?</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(())</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><h4 id="_3-3-3、api" tabindex="-1">3.3.3、api <a class="header-anchor" href="#_3-3-3、api" aria-label="Permalink to &quot;3.3.3、api&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">futures_util</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">future</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:ok</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> TryStreamExt</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">service</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">make_service_fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> service_fn</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> Request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Body</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Server</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> StatusCode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> body</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Method</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let addr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:3000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    let service </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make_service_fn</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> async </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Error&gt;(</span><span style="color:#F07178;">service_fn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">echo</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    let server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Server::</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">addr)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">serve</span><span style="color:#A6ACCD;">(service);</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Listening on http://{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addr);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    server.await?;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;">(req: Request</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Body</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Response</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Body</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#A6ACCD;"> Error</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">match</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">req.method(</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> req.uri().path()) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      (</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">Method</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">GET</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Response</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new(</span><span style="color:#A6ACCD;font-style:italic;">Body</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">from</span><span style="color:#F07178;">( </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Try POSTing data to /echo such as: \`curl localhost:3000/echo -XPOST -d &#39;hello world&#39;\`</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">),</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">Method</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">POST</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/echo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Response</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into_body</span><span style="color:#F07178;">()))</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">      (</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">Method</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">POST</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/echo/uppercase</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">chunk_stream</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into_body</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map_ok</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">chunk</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              chunk.iter().map(|c| c.to_ascii_uppercase()).collect</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Vec</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">u8</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">          });</span></span>
<span class="line"><span style="color:#A6ACCD;">          Ok(Response::new(Body::wrap_stream(chunk_stream)))</span></span>
<span class="line"><span style="color:#A6ACCD;">      },</span></span>
<span class="line"><span style="color:#A6ACCD;">      (&amp;Method::POST, &quot;/echo/reversed&quot;) =&gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          let body </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> body::</span><span style="color:#82AAFF;">to_bytes</span><span style="color:#A6ACCD;">(req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into_body</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">          let reversed_body </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">iter</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rev</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cloned</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">collect</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Vec</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">u8</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">          Ok(Response::new(Body::from(reversed_body)))</span></span>
<span class="line"><span style="color:#A6ACCD;">      },</span></span>
<span class="line"><span style="color:#A6ACCD;">      _ =&gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          let mut not_found </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Response::</span><span style="color:#82AAFF;">default</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">not_found</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">status_mut</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> StatusCode::NOT_FOUND;</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(not_found)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_3-3-4、http代理" tabindex="-1">3.3.4、http代理 <a class="header-anchor" href="#_3-3-4、http代理" aria-label="Permalink to &quot;3.3.4、http代理&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">net</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:SocketAddr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Error</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Ok</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">futures_util</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:TryStreamExt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    body</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">service</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">make_service_fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> service_fn</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    Body</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Method</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Server</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> StatusCode</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let </span><span style="color:#F07178;">addr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> SocketAddr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:3000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let out_addr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> SocketAddr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">127.0.0.1:60244</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Client</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    let service </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make_service_fn</span><span style="color:#A6ACCD;">(move </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        let out_addr_clone </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> out_addr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        async move </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">Ok</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">service_fn</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">move</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                let </span><span style="color:#A6ACCD;">uri_string</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://{}{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                  </span><span style="color:#A6ACCD;">out_addr_clone</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                  </span><span style="color:#A6ACCD;">req</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">uri</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">path_and_query</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">as_str</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap_or</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">                );</span></span>
<span class="line"><span style="color:#F07178;">                let </span><span style="color:#A6ACCD;">uri</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">uri_string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">();</span></span>
<span class="line"><span style="color:#F07178;">                *req.uri_mut() = uri;</span></span>
<span class="line"><span style="color:#F07178;">                client.request(req)</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    let server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Server::</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">addr)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">serve</span><span style="color:#A6ACCD;">(service);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Listening on http://{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addr);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    server</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h3 id="_3-4、client" tabindex="-1">3.4、Client <a class="header-anchor" href="#_3-4、client" aria-label="Permalink to &quot;3.4、Client&quot;">​</a></h3><h4 id="_3-4-1、简单示例" tabindex="-1">3.4.1、简单示例 <a class="header-anchor" href="#_3-4-1、简单示例" aria-label="Permalink to &quot;3.4.1、简单示例&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">*;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Client</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Client::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  let uri </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://httpbin.org/ip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  let resp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(uri)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Response: {}--{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">status</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">body</span><span style="color:#A6ACCD;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_3-4-2、打印body" tabindex="-1">3.4.2、打印body <a class="header-anchor" href="#_3-4-2、打印body" aria-label="Permalink to &quot;3.4.2、打印body&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:HttpBody</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">tokio</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">io</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">stdout</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> AsyncWriteExt </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Client::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    let uri </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://httpbin.org/ip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let mut resp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(uri)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">status</span><span style="color:#A6ACCD;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    while let </span><span style="color:#82AAFF;">Some</span><span style="color:#A6ACCD;">(chunk) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">body_mut</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// println!(&quot;{:?}&quot;, chunk?);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">stdout</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">.</span><span style="color:#F07178;">write_all</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">chunk</span><span style="color:#89DDFF;">?)</span><span style="color:#A6ACCD;">.await?;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_3-4-3、post" tabindex="-1">3.4.3、post <a class="header-anchor" href="#_3-4-3、post" aria-label="Permalink to &quot;3.4.3、post&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Body</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Method</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Client::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    let req </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Request::</span><span style="color:#82AAFF;">builder</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        .method(</span><span style="color:#F07178;">Method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:POST)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">uri</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://httpbin.org/post</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">header</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content-type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">body</span><span style="color:#A6ACCD;">(Body::</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(r#</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">#))</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span></span>
<span class="line"><span style="color:#A6ACCD;">    let resp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">request</span><span style="color:#A6ACCD;">(req)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// body -&gt; Bytes</span></span>
<span class="line"><span style="color:#A6ACCD;">    let res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> hyper</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">body::</span><span style="color:#82AAFF;">to_bytes</span><span style="color:#A6ACCD;">(resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into_body</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// bytes -&gt; String</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">body: {:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> String::</span><span style="color:#82AAFF;">from_utf8_lossy</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">res));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_3-4-4、body-to-json" tabindex="-1">3.4.4、body to json <a class="header-anchor" href="#_3-4-4、body-to-json" aria-label="Permalink to &quot;3.4.4、body to json&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Buf</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">serde</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Deserialize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Deserialize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Debug)]</span></span>
<span class="line"><span style="color:#A6ACCD;">struct User </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Client::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    let uri </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://jsonplaceholder.typicode.com/users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(uri)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let body </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> hyper</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">body::</span><span style="color:#82AAFF;">aggregate</span><span style="color:#A6ACCD;">(res)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let users</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Vec</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> serde_json::</span><span style="color:#82AAFF;">from_reader</span><span style="color:#A6ACCD;">(body</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reader</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    for user </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> users </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">id: {}, name: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> user.id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> user.name);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h2 id="_4、anyhow-异常捕捉" tabindex="-1">4、anyhow(异常捕捉) <a class="header-anchor" href="#_4、anyhow-异常捕捉" aria-label="Permalink to &quot;4、anyhow(异常捕捉)&quot;">​</a></h2><h3 id="_4-1、安装" tabindex="-1">4.1、安装 <a class="header-anchor" href="#_4-1、安装" aria-label="Permalink to &quot;4.1、安装&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">anyhow </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.75</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h3 id="_4-2、使用" tabindex="-1">4.2、使用 <a class="header-anchor" href="#_4-2、使用" aria-label="Permalink to &quot;4.2、使用&quot;">​</a></h3><h4 id="_4-2-1、result" tabindex="-1">4.2.1、Result <a class="header-anchor" href="#_4-2-1、result" aria-label="Permalink to &quot;4.2.1、Result&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:File</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">File</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo1.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_4-2-2、context" tabindex="-1">4.2.2、Context <a class="header-anchor" href="#_4-2-2、context" aria-label="Permalink to &quot;4.2.2、Context&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Context</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">hyper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Client</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Client::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  let uri </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http1://httpbin.org/ip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  let resp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(uri)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">context</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">context</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Response: {}--{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">status</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">body</span><span style="color:#A6ACCD;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_4-2-3、with-context" tabindex="-1">4.2.3、with_context <a class="header-anchor" href="#_4-2-3、with-context" aria-label="Permalink to &quot;4.2.3、with_context&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:fs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">anyhow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Context</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cargo1.toml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let content </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> fs::</span><span style="color:#82AAFF;">read</span><span style="color:#A6ACCD;">(path)        </span></span>
<span class="line"><span style="color:#A6ACCD;">        .with_context(|| format!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Failed to read instrs from {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> path))?;</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> content);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">Ok</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_5、reqwest-请求库" tabindex="-1">5、reqwest(请求库) <a class="header-anchor" href="#_5、reqwest-请求库" aria-label="Permalink to &quot;5、reqwest(请求库)&quot;">​</a></h2><h3 id="_5-1、安装" tabindex="-1">5.1、安装 <a class="header-anchor" href="#_5-1、安装" aria-label="Permalink to &quot;5.1、安装&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">reqwest </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.11</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">tokio </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_5-2、get请求" tabindex="-1">5.2、get请求 <a class="header-anchor" href="#_5-2、get请求" aria-label="Permalink to &quot;5.2、get请求&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">collections</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:HashMap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let resp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> reqwest::</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://httpbin.org/ip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        .await?</span></span>
<span class="line"><span style="color:#A6ACCD;">        .</span><span style="color:#F07178;">json</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">HashMap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">, </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        .await?;</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(&quot;</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">:#</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">, resp);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h3 id="_5-3、post请求" tabindex="-1">5.3、post请求 <a class="header-anchor" href="#_5-3、post请求" aria-label="Permalink to &quot;5.3、post请求&quot;">​</a></h3><p><code>Cargo.toml</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">reqwest </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.11</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">tokio </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">full</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">serde </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">derive</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">serde_json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">serde</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Serialize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Deserialize</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">serde_json</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:json</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Debug</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Serialize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Deserialize)]</span></span>
<span class="line"><span style="color:#A6ACCD;">struct User </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">userId</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">u16</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">u16</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">title</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[tokio::main]</span></span>
<span class="line"><span style="color:#A6ACCD;">async fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Box</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">dyn </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> reqwest::Client::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    let post </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> client</span></span>
<span class="line"><span style="color:#A6ACCD;">        .post(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">http://jsonplaceholder.typicode.com/posts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        .json(&amp;json!({</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">userId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">await</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let resp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> post</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">().await?;</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(&quot;</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">:#</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">, resp);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Ok</span><span style="color:#A6ACCD;">(())</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h2 id="_6、structopt-命令行参数转结构体" tabindex="-1">6、structopt(命令行参数转结构体) <a class="header-anchor" href="#_6、structopt-命令行参数转结构体" aria-label="Permalink to &quot;6、structopt(命令行参数转结构体)&quot;">​</a></h2><h3 id="_6-1、安装" tabindex="-1">6.1、安装 <a class="header-anchor" href="#_6-1、安装" aria-label="Permalink to &quot;6.1、安装&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">structopt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.3</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h3 id="_6-2、使用" tabindex="-1">6.2、使用 <a class="header-anchor" href="#_6-2、使用" aria-label="Permalink to &quot;6.2、使用&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:PathBuf</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">structopt</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:StructOpt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/// A basic example</span></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(StructOpt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Debug)]</span></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">structopt</span><span style="color:#A6ACCD;">(name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">basic</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)] </span><span style="color:#676E95;font-style:italic;">// 命令行的名字</span></span>
<span class="line"><span style="color:#A6ACCD;">struct Opt </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// Activate debug mode</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">structopt</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">short</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">long</span><span style="color:#F07178;">)]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bool</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// Set speed</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// we don&#39;t want to name it &quot;speed&quot;, need to look smart</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">structopt</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">short</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">long</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">speed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">default_value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">42</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">speed</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">f64</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// Input file</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">structopt</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">from_os_str</span><span style="color:#F07178;">))]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">input</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">PathBuf</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// Output file, stdout if not present</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">structopt</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">from_os_str</span><span style="color:#F07178;">))]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">output</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">PathBuf</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// Output file, stdout if not present</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">structopt</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">from_os_str</span><span style="color:#F07178;">))]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">output2</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">PathBuf</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">/// Where to write the output: to \`stdout\` or \`file\`</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">structopt</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">short</span><span style="color:#F07178;">)]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">out_type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">opt</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Opt</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">from_args</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:#?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">opt</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_7、egui-异步库" tabindex="-1">7、egui(异步库) <a class="header-anchor" href="#_7、egui-异步库" aria-label="Permalink to &quot;7、egui(异步库)&quot;">​</a></h2><h3 id="_7-1、安装" tabindex="-1">7.1、安装 <a class="header-anchor" href="#_7-1、安装" aria-label="Permalink to &quot;7.1、安装&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">eframe </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.23</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">egui_extras </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.23</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">all_loaders</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">image </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> version </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.24</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> features </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jpeg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_7-2、使用" tabindex="-1">7.2、使用 <a class="header-anchor" href="#_7-2、使用" aria-label="Permalink to &quot;7.2、使用&quot;">​</a></h3><h4 id="_7-2-1、基础控件" tabindex="-1">7.2.1、基础控件 <a class="header-anchor" href="#_7-2-1、基础控件" aria-label="Permalink to &quot;7.2.1、基础控件&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">eframe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:egui</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Default)]</span></span>
<span class="line"><span style="color:#A6ACCD;">struct MyApp </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">age</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">u32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">impl </span><span style="color:#FFCB6B;">eframe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:App for MyApp </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">update</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">egui</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frame</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eframe</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Frame</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">CentralPanel</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          ui.heading(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">My egui Application</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">          ui.horizontal(|ui| {</span></span>
<span class="line"><span style="color:#F07178;">              let name_label = ui.label(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Your name: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">              ui.text_edit_singleline(&amp;mut self.name)</span></span>
<span class="line"><span style="color:#F07178;">                  .labelled_by(name_label.id);</span></span>
<span class="line"><span style="color:#F07178;">          });</span></span>
<span class="line"><span style="color:#F07178;">          ui.add(egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">Slider</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.</span><span style="color:#89DDFF;">.=</span><span style="color:#F78C6C;">120</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">text</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">));</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">button</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Click each year</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clicked</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              self.age += </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">label</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello &#39;{}&#39;, age {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#F07178;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">image</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">egui</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">include_image</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../assets/logo.png</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">          ));</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">eframe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Error</span><span style="color:#89DDFF;">&gt;{</span></span>
<span class="line"><span style="color:#A6ACCD;">    let options </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> eframe::NativeOptions </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">initial_window_size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Some</span><span style="color:#A6ACCD;">(egui::</span><span style="color:#82AAFF;">vec2</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">640.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600.0</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        ..</span><span style="color:#F07178;">Default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">default</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">eframe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">run_native</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My egui App</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        options</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        Box::</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">cc</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">egui_extras</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">install_image_loaders</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">cc</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">egui_ctx);</span></span>
<span class="line"><span style="color:#A6ACCD;">          Box::</span><span style="color:#89DDFF;">new(</span><span style="color:#A6ACCD;font-style:italic;">MyApp</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">default</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">        }),</span></span>
<span class="line"><span style="color:#A6ACCD;">    )</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h4 id="_7-2-2、confirm确认框" tabindex="-1">7.2.2、confirm确认框 <a class="header-anchor" href="#_7-2-2、confirm确认框" aria-label="Permalink to &quot;7.2.2、confirm确认框&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">eframe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:egui</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Default)]</span></span>
<span class="line"><span style="color:#A6ACCD;">struct MyApp </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">allowed_to_close</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bool</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">show_confirmation_dialog</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bool</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">impl </span><span style="color:#FFCB6B;">eframe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:App for MyApp </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">on_close_event</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">self</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bool</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">show_confirmation_dialog</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">allowed_to_close</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">update</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">egui</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">frame</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eframe</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Frame</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">CentralPanel</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          ui.heading(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">My egui Application</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">      });</span></span>
<span class="line"><span style="color:#F07178;">      if self.show_confirmation_dialog {</span></span>
<span class="line"><span style="color:#F07178;">          egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">Window</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Do you want to quit?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">collapsible</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resizable</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                  ui.horizontal(|ui| </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">button</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cancel</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clicked</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                          </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">show_confirmation_dialog</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">button</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Yes!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clicked</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                          </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">allowed_to_close</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                          </span><span style="color:#A6ACCD;">frame</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    }</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">main</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eframe</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Error</span><span style="color:#89DDFF;">&gt;{</span></span>
<span class="line"><span style="color:#F07178;">    let </span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eframe</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">NativeOptions</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        initial_window_size</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Some</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">egui</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">vec2</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">640.0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">600.0</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        ..Default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">default</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">    eframe</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#82AAFF;">run_native</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My egui App</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">Box</span><span style="color:#F07178;">::</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">cc</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          Box</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">new(</span><span style="color:#A6ACCD;font-style:italic;">MyApp</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">default</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#F07178;">        }),</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><h4 id="_7-2-3、键盘事件" tabindex="-1">7.2.3、键盘事件 <a class="header-anchor" href="#_7-2-3、键盘事件" aria-label="Permalink to &quot;7.2.3、键盘事件&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">impl </span><span style="color:#FFCB6B;">eframe</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:App for Content </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">fn</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">update</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">egui</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_frame</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eframe</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Frame</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#FFCB6B;">CentralPanel</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          ui.heading(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Press/Hold/Release example. Press A to test.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">          if ui.button(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Clear</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">).clicked() {</span></span>
<span class="line"><span style="color:#F07178;">              self.text.clear();</span></span>
<span class="line"><span style="color:#F07178;">          }</span></span>
<span class="line"><span style="color:#F07178;">          egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">ScrollArea</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">vertical</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">auto_shrink</span><span style="color:#F07178;">([</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">; </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">])</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stick_to_bottom</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">show</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">ui</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                  ui.label(&amp;self.text);</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">if</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">input</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">key_pressed</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">egui</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">Key</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">A</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              self.text.push_str(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#F07178;">Pressed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">          }</span></span>
<span class="line"><span style="color:#F07178;">          if ctx.input(|i| i.key_down(egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">Key</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">A</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              self.text.push_str(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#F07178;">Held</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">              ui.ctx().request_repaint(); </span><span style="color:#676E95;font-style:italic;">// make sure we note the holding.</span></span>
<span class="line"><span style="color:#F07178;">          }</span></span>
<span class="line"><span style="color:#F07178;">          if ctx.input(|i| i.key_released(egui</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">Key</span><span style="color:#F07178;">::</span><span style="color:#A6ACCD;">A</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              self.text.push_str(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#F07178;">Released</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">          }</span></span>
<span class="line"><span style="color:#F07178;">      });</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><h2 id="_8、drive-builder" tabindex="-1">8、drive_builder <a class="header-anchor" href="#_8、drive-builder" aria-label="Permalink to &quot;8、drive_builder&quot;">​</a></h2><h3 id="_8-1、安装" tabindex="-1">8.1、安装 <a class="header-anchor" href="#_8-1、安装" aria-label="Permalink to &quot;8.1、安装&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[dependencies]</span></span>
<span class="line"><span style="color:#A6ACCD;">drive_builder </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.1</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h3 id="_8-2、使用" tabindex="-1">8.2、使用 <a class="header-anchor" href="#_8-2、使用" aria-label="Permalink to &quot;8.2、使用&quot;">​</a></h3><h4 id="_8-2-1、基本使用" tabindex="-1">8.2.1、基本使用 <a class="header-anchor" href="#_8-2-1、基本使用" aria-label="Permalink to &quot;8.2.1、基本使用&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> mut ch </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ChannelBuilder::</span><span style="color:#82AAFF;">default</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ipsum</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> ch </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ch)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="_8-2-2、setter" tabindex="-1">8.2.2、setter <a class="header-anchor" href="#_8-2-2、setter" aria-label="Permalink to &quot;8.2.2、setter&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">derive_builder</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Builder</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Builder</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Debug)]</span></span>
<span class="line"><span style="color:#A6ACCD;">struct Channel </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">builder</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">setter</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">into</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">strip_option</span><span style="color:#F07178;">))]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">ipsum</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">builder</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">setter</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">into</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">strip_option</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">default</span><span style="color:#F07178;">)]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ChannelBuilder</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">default</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ipsum</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ch</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_8-2-3、重命名builder" tabindex="-1">8.2.3、重命名builder <a class="header-anchor" href="#_8-2-3、重命名builder" aria-label="Permalink to &quot;8.2.3、重命名builder&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">use </span><span style="color:#FFCB6B;">derive_builder</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">:Builder</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">derive</span><span style="color:#A6ACCD;">(Builder</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Debug)]</span></span>
<span class="line"><span style="color:#A6ACCD;">#[</span><span style="color:#82AAFF;">builder</span><span style="color:#A6ACCD;">(name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FooConstructor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)]</span></span>
<span class="line"><span style="color:#A6ACCD;">struct Channel </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">builder</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">setter</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">into</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">strip_option</span><span style="color:#F07178;">))]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">ipsum</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">builder</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">setter</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">into</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">strip_option</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">default</span><span style="color:#F07178;">)]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#F07178;">    #[</span><span style="color:#82AAFF;">builder</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">setter</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">skip</span><span style="color:#F07178;">))] </span><span style="color:#676E95;font-style:italic;">// 跳过该属性，会使用默认值</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">setter_skipped</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mut</span><span style="color:#F07178;"> ch </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">FooConstructor</span><span style="color:#F07178;">::</span><span style="color:#82AAFF;">default</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ipsum</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ch.setter_skipped(&quot;heee&quot;.to_string());</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ch</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{:?}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ch</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,178),e=[o];function t(c,r,F,y,D,A){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{i as __pageData,u as default};
