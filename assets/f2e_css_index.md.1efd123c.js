import{_ as e,o as t,c as a,X as o}from"./chunks/framework.28451963.js";const f=JSON.parse('{"title":"CSS/CSS3简介","description":"","frontmatter":{},"headers":[],"relativePath":"f2e/css/index.md","filePath":"f2e/css/index.md","lastUpdated":1704191114000}'),i={name:"f2e/css/index.md"},l=o('<h1 id="css-css3简介" tabindex="-1">CSS/CSS3简介 <a class="header-anchor" href="#css-css3简介" aria-label="Permalink to &quot;CSS/CSS3简介&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>CSS(层叠样式表，Cascading Style Sheets)是一种用于描述HTML或XML(包括SVG、XHTML等)文档样式的语言。它可以为网页添加布局、颜色、字体、动画等视觉效果，并控制页面元素的显示方式。CSS通过选择器来定位和操作特定的HTML元素，然后定义这些元素的样式属性。</p><p>CSS有以下几个主要部分：</p><ol><li><p>声明 :声明是CSS中的基本单位，用于指定要应用到HTML元素的样式规则。声明由一个选择器和一组属性组成。</p></li><li><p>选择器 :选择器用于确定哪些HTML元素将应用特定的CSS样式。选择器可以是标签名、类名、ID、伪类和伪元素。</p></li><li><p>属性 :属性是CSS中的关键字，用于设置HTML元素的样式。常见的属性有：color(颜色)、font-family(字体)、font-size(字体大小)、background-color(背景颜色)等。</p></li><li><p>值 :值是用来设置属性的具体数值或表示方式。例如，可以使用像素值设置宽度和高度，使用百分比设置宽度和高度，或者使用关键词如&quot;inherit&quot;表示继承父元素的属性值。</p></li><li><p>媒体查询 :媒体查询允许您根据设备类型(如屏幕宽度、分辨率等)对CSS进行条件性地应用。这使得网站能够针对不同设备提供不同的样式。</p></li></ol><p>在实际开发中，我们通常会将CSS代码放在外部文件(如styles.css)中，并在HTML文件中引用这个文件，以便将样式与HTML内容分离，便于维护和管理。</p><h2 id="css3新增特性" tabindex="-1">CSS3新增特性 <a class="header-anchor" href="#css3新增特性" aria-label="Permalink to &quot;CSS3新增特性&quot;">​</a></h2><ol><li>属性选择器：可以使用方括号来选择属性值，例如[href]可以选中所有带有href属性的元素。</li><li>伪类选择器：可以使用冒号来选择伪类，例如::before和::after可以在元素前后添加内容。</li><li>媒体查询：可以根据屏幕尺寸、分辨率等条件应用不同的样式。</li><li>动画：可以使用<code>@keyframes</code>规则创建动画效果。</li><li>过渡：可以使用<code>transition</code>属性实现元素状态的平滑过渡。</li><li>多列布局：可以使用<code>column-count</code>属性实现多列布局。</li></ol><h2 id="伪类" tabindex="-1">伪类 <a class="header-anchor" href="#伪类" aria-label="Permalink to &quot;伪类&quot;">​</a></h2><table><thead><tr><th>属性名</th><th>描述</th></tr></thead><tbody><tr><td>::before</td><td>作为匹配选中元素的第一个子元素，必须设置<code>content</code>属性</td></tr><tr><td>::after</td><td>作为匹配选中元素的最后一个子元素，必须设置<code>content</code>属性</td></tr></tbody></table>',10),r=[l];function s(c,d,n,S,h,p){return t(),a("div",null,r)}const C=e(i,[["render",s]]);export{f as __pageData,C as default};
